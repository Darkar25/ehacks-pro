package ehacks.mod.modulesystem.classes.mods.tinkers;

import cpw.mods.fml.common.network.ByteBufUtils;
import ehacks.mod.api.ModStatus;
import ehacks.mod.api.Module;
import ehacks.mod.modulesystem.classes.keybinds.GiveKeybind;
import ehacks.mod.wrapper.ModuleCategory;
import ehacks.mod.wrapper.Statics;
import ehacks.mod.wrapper.Wrapper;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.util.MovingObjectPosition;
import org.lwjgl.input.Keyboard;

public class MegaExploit
        extends Module {

    public MegaExploit() {
        super(ModuleCategory.EHACKS);
    }

    @Override
    public String getName() {
        return "MegaExploit";
    }

    @Override
    public String getDescription() {
        return "Sets any ItemStack in blocks from TinkerConstruct\nUsage:\n  Numpad0 - give item";
    }

    @Override
    public void onModuleEnabled() {
        try {
            Class.forName("tconstruct.util.network.PatternTablePacket");
        } catch (Exception ex) {
            this.off();
        }
    }

    @Override
    public ModStatus getModStatus() {
        try {
            Class.forName("tconstruct.util.network.PatternTablePacket");
            return ModStatus.WORKING;
        } catch (Exception e) {
            return ModStatus.NOTWORKING;
        }
    }

    @Override
    public void onModuleDisabled() {

    }

    private boolean prevState = false;

    @Override
    public void onTicks() {
        boolean newState = Keyboard.isKeyDown(GiveKeybind.getKey());
        if (newState && !prevState) {
            prevState = newState;
            MovingObjectPosition mop = Wrapper.INSTANCE.mc().objectMouseOver;
            if (mop.sideHit == -1) {
                return;
            }
            if (Statics.STATIC_ITEMSTACK == null) {
                return;
            }
            setMagic(mop.blockX, mop.blockY, mop.blockZ, Statics.STATIC_ITEMSTACK);
        }
        prevState = newState;
    }

    public void setMagic(int x, int y, int z, ItemStack item) {
        ByteBuf buf = Unpooled.buffer(0);
        buf.writeByte(8);
        buf.writeInt(x);
        buf.writeInt(y);
        buf.writeInt(z);
        ByteBufUtils.writeItemStack(buf, item);
        C17PacketCustomPayload packet = new C17PacketCustomPayload("TConstruct", buf);
        Wrapper.INSTANCE.player().sendQueue.addToSendQueue(packet);
    }

    @Override
    public String getModName() {
        return "Tinker";
    }
}
